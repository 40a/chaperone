settings: {
   env_set: { PATH: "$(TESTHOME)/bin:$(PATH)" }
}

cron1-echo.service: {
  type: cron,
  enabled: "$(ENABLE_CRON1:-false)",
  interval: "* * * * * */10",
  command: "echo from cron1",
}

# ENABLE_APACHE4: Complex timing.  Apache running in the foreground, but has untracked
# processes.  Cron job simulates what logrotate does, stopping and starting it.  The key
# here is that Chaperone shouldn't shut the system down inadvertently as processes terminate
# and restart.

test4-apache.service: {
  type: simple,
  enabled: "$(ENABLE_APACHE4:-false)",
  command: "service apache2 start",
  uid: root,
}

test4-simrotate.service: {
  type: cron,
  command: "bash $(_CHAP_CONFIG_DIR)/simulate-rotate.sh test4-apache",
  enabled: "$(ENABLE_APACHE4:-false)",
  interval:  "* * * * * */10",
  service_groups: IDLE,
}

# ENABLE_APACHE5: Same deal, but this time Chaperone knows about apache and telchap can do its job

test5-apache.service: {
  type: simple,
  enabled: "$(ENABLE_APACHE5:-false)",
  command: "service apache2 start",
  pidfile: "/run/apache2/apache2.pid",
  uid: root,
}

test5-simrotate.service: {
  type: cron,
  command: "bash $(_CHAP_CONFIG_DIR)/simulate-rotate.sh test5-apache telchap",
  enabled: "$(ENABLE_APACHE5:-false)",
  interval:  "* * * * * */10",
  service_groups: IDLE,
}

# ENABLE_APACHE6: Just a test to be sure we can kill Apache AND chaperone with a non-scheduled background job.

test6-apache.service: {
  type: simple,
  enabled: "$(ENABLE_APACHE6:-false)",
  command: "service apache2 start",
  uid: root,
}

test6-simrotate.service: {
  type: oneshot,
  command: "bash -c 'sleep 5; kill-from-pidfile /run/apache2/apache2.pid'",
  enabled: "$(ENABLE_APACHE6:-false)",
  interval:  "* * * * * */10",
  service_groups: IDLE,
}

# ENABLE_APACHE7: Just a test to be sure we can kill Apache AND chaperone with a non-scheduled background job.

test7-apache.service: {
  type: simple,
  enabled: "$(ENABLE_APACHE7:-false)",
  command: "service apache2 start",
  uid: root,
}

test7-simrotate.service: {
  type: cron,
  command: "bash -c 'sleep 5; kill-from-pidfile /run/apache2/apache2.pid'",
  enabled: "$(ENABLE_APACHE7:-false)",
  interval:  "* * * * * */8",
  service_groups: IDLE,
}

# ENABLE_APACHE8: Cron job kills apache and disables self, container should die

test8-apache.service: {
  type: simple,
  enabled: "$(ENABLE_APACHE8:-false)",
  command: "service apache2 start",
  uid: root,
}

test8-simrotate.service: {
  type: cron,
  command: "bash -c 'sleep 5; kill-from-pidfile /run/apache2/apache2.pid; telchap stop test8-simrotate'",
  enabled: "$(ENABLE_APACHE8:-false)",
  interval:  "* * * * * */8",
  service_groups: IDLE,
}

# Debugging output for all

default.logging: {
  selector: "*.debug",
  stdout: true,
}
